# Generated by Django 5.2.4 on 2025-09-17 03:42

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ICC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.BigIntegerField(blank=True, null=True, verbose_name='用户ID')),
                ('custid', models.BigIntegerField(blank=True, null=True, verbose_name='客户ID')),
                ('acctid', models.BigIntegerField(blank=True, null=True, verbose_name='账户ID')),
                ('paidFlag', models.CharField(blank=True, choices=[('0', '预付费'), ('1', '后付费')], max_length=1, null=True, verbose_name='付费标志')),
                ('imsi', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='IMSI必须是15位数字', regex='^\\d{15}$')], verbose_name='IMSI')),
                ('iccid', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='ICCID必须是20位数字', regex='^\\d{20}$')], verbose_name='ICCID')),
                ('msisdn', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='MSISDN必须是1-15位数字', regex='^\\d{1,15}$')], verbose_name='MSISDN')),
                ('brand', models.CharField(blank=True, max_length=50, null=True, verbose_name='品牌')),
                ('rateplanId', models.CharField(blank=True, max_length=16, null=True, verbose_name='费率计划ID')),
                ('lifeCycle', models.CharField(blank=True, choices=[('0', '未激活 (Inactive)'), ('1', '活跃 (Active)'), ('2', '已停机 (Suspended)'), ('3', '已锁定 (Locked)'), ('4', '已过期 (Expired)'), ('5', '已删除 (Deleted)')], max_length=1, null=True, verbose_name='生命周期状态')),
                ('lifeCycleTime', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='生命周期时间格式：yyyyMMddHHmmss', regex='^\\d{14}$')], verbose_name='生命周期时间')),
                ('suspendReason', models.CharField(blank=True, choices=[('1', '客户要求，默认选项'), ('2', '丢失'), ('3', '客户要求并保留电话号码'), ('4', '欠费（未付租金）'), ('5', '超过用户过期时间'), ('6', 'SIM卡与手机分离'), ('7', '欠费（未付账单）'), ('8', '保留'), ('9', '其他')], max_length=1, null=True, verbose_name='停机原因')),
                ('activeType', models.CharField(blank=True, max_length=1, null=True, verbose_name='激活类型')),
                ('validityUnit', models.CharField(blank=True, choices=[('H', '小时'), ('D', '日历日'), ('M', '日历月'), ('N', '永不过期')], max_length=1, null=True, verbose_name='有效期单位')),
                ('validityTime', models.IntegerField(blank=True, null=True, verbose_name='有效期时长')),
                ('activeTime', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='激活时间格式：yyyyMMddHHmmss', regex='^\\d{14}$')], verbose_name='激活时间')),
                ('activeDeadline', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='最后激活时间格式：yyyyMMdd', regex='^\\d{8}$')], verbose_name='最后激活时间')),
                ('hlrState', models.CharField(blank=True, choices=[('A', '正常 (Normal)'), ('B', '丢失 (Loss)'), ('G', '暂停 (Suspend)'), ('D', '已删除 (Deleted)'), ('I', '预删除 (Pre-delete)')], max_length=16, null=True, verbose_name='设备状态')),
                ('effTime', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='生效时间格式：yyyyMMddHHmmss', regex='^\\d{14}$')], verbose_name='生效时间')),
                ('expTime', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='过期时间格式：yyyyMMddHHmmss', regex='^\\d{14}$')], verbose_name='过期时间')),
                ('createTime', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='创建时间格式：yyyyMMddHHmmss', regex='^\\d{14}$')], verbose_name='创建时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'ICC',
                'verbose_name_plural': 'ICC管理',
                'db_table': 'icc_icc',
                'ordering': ['-created_at'],
            },
        ),
    ]
